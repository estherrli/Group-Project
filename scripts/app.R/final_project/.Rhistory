# Create ggplot scatter
p <- ggplot(plot_data) +
geom_point(mapping = aes_string(x = "year", y = input$y_var),
color = input$color) +
labs(x = "Year", y = input$y_var, title = title)
p
})
}
runApp()
runApp()
library(shiny)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(stringr)
co2_data <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
names(co2_data)[1] <- "Country_Abbreviation"
names(co2_data)[4] <- "CO2_Production"
names(co2_data)[5] <- "Percent_Change_In_CO2"
names(co2_data)[6] <- "Annual_Change_In_CO2"
names(co2_data)[7] <- "Annual_CO2_Consumption"
names(co2_data)[8] <- "Net_CO2_Emission_Embedded_In_Trade"
names(co2_data)[9] <- "Net_CO2_Emission_Embedded_In_Trade_Percentage"
names(co2_data)[10] <- "Average_CO2_Per_Capita"
names(co2_data)[11] <- "Per_Capita_CO2_Consumption"
names(co2_data)[12] <- "Percentage_Of_GLobal_CO2_Emission"
names(co2_data)[13] <- "Cumulative_CO2_Emission"
names(co2_data)[14] <- "Percentage_Of_GLobal_Cumulative_CO2_Emission"
names(co2_data)[15] <- "CO2_Emission_Per_Unit_Of_GDP"
names(co2_data)[16] <- "Consumption_Based_CO2_Emission_Per_Unit_Of_GDP"
names(co2_data)[17] <- "CO2_Comsumption_Per_Unit_Of_Energry"
names(co2_data)[18] <- "CO2_Emission_From_Cement_Production"
names(co2_data)[19] <- "CO2_Emission_From_Coal_Production"
names(co2_data)[20] <- "CO2_Emission_From_Gas_Flare"
names(co2_data)[21] <- "CO2_Emission_From_Gas_Production"
names(co2_data)[22] <- "CO2_Emission_From_Oil_Production"
names(co2_data)[23] <- "Per_Captia_CO2_Emission_From_Cement_Production"
names(co2_data)[24] <- "Per_Captia_CO2_Emission_From_Coal_Production"
names(co2_data)[25] <- "Per_Captia_CO2_Emission_From_Gas_Flare"
names(co2_data)[26] <- "Per_Captia_CO2_Emission_From_Gas_Production"
names(co2_data)[27] <- "Per_Captia_CO2_Emission_From_Oil_Production"
names(co2_data)[28] <- "Annual_Greenhouse_Gas_Emission"
names(co2_data)[29] <- "Greenhouse_Gas_Emission_Per_Capita"
names(co2_data)[30] <- "Annual_Methane_Emissions"
names(co2_data)[31] <- "Methane_Emissions_Per_Capita"
names(co2_data)[32] <- "Annual_Nitrous_Oxide_Emissions"
names(co2_data)[33] <- "Per_Capita_Nitrous_Oxide_Emissions"
names(co2_data)[34] <- "Primary_Energy_Consumption"
names(co2_data)[35] <- "Primary_Energy_Consumption_Per_Capita"
names(co2_data)[36] <- "Primary_Energy_Consumption_Per_Unit_Of_GDP"
names(co2_data)[38] <- "Total_Real_Gross_GDP"
#Summary Statistics:
# country with max CO2 per capita across all countries
max_co2_capita <- co2_data %>%
filter(year == max(year, na.rm = TRUE)) %>%
filter(Average_CO2_Per_Capita == max(Average_CO2_Per_Capita, na.rm = TRUE)) %>%
pull(country)
# max CO2 per capita across all countries
max_co2_capita <- co2_data %>%
mutate(Average_CO2_Per_Capita = max(Average_CO2_Per_Capita, na.rm = TRUE)) %>%
pull(Average_CO2_Per_Capita)
# median per capita co2 emission in United States
us_co2_capita <- co2_data %>%
filter(country == "North America (excl. USA)") %>%
filter(Average_CO2_Per_Capita == median(Average_CO2_Per_Capita,
na.rm = TRUE)) %>%
pull(Average_CO2_Per_Capita)
# average US co2 absolute growth percentage
avg_us_growth_abs <- co2_data %>%
filter(country == "North America (excl. USA)") %>%
mutate(avg_co2_growth_prct_abs = mean(Annual_Change_In_CO2, na.rm = TRUE)) %>%
pull(avg_co2_growth_prct_abs)
# max US co2 growth percentage
max_us_growth <- co2_data %>%
filter(country == "North America (excl. USA)") %>%
mutate(max_co2_growth_prct = max(Percent_Change_In_CO2, na.rm = TRUE)) %>%
pull(max_co2_growth_prct)
library(plotly)
library(shiny)
library(tidyverse)
server <- function(input, output) {
output$scatter <- renderPlotly({
# Store the title of the graph in a variable indicating the x/y variables
title <- paste0("Climate Change Visualzation for USA: ",
input$x_var, "Year vs ", input$y_var)
# filter data for USA
plot_data <- co2_data %>%
filter(Country_Abbreviation == "USA") %>%
filter(!is.na(Country_Abbreviation))
# Create ggplot scatter
p <- ggplot(plot_data) +
geom_point(mapping = aes_string(x = "year", y = input$y_var),
color = input$color) +
labs(x = "Year", y = input$y_var, title = title)
p
})
}
library(shiny)
library(ggplot2)
library(plotly)
library(RColorBrewer)
co2_data <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
#introduction page
intro_page <- tabPanel(
"Introduction",
mainPanel(
h2("Topic Introduction"),
p("This analysis covers data regarding climate change. Specifically,
this analysis will focus on average CO2 emissions per capita (measured in
tonnes) and CO2 growth percentages. 5 statistics were calculated
to summarize these variables. The country with the max average CO2 emissions
per capita across all years was Qatar. The max average CO2 emission per
capita value was 403. The median average per capita CO2 emission in the US
was 2.53. The average absolute growth of CO2 emissions in the US was
4.6 and the max average absolute growth of CO2 emissions in the US
was 600.")
)
)
# Layout for visual page tab that has Y variable and color options
visual_page <- tabPanel(
"Visualization Page",
sidebarLayout(
sidebarPanel(
p("widgets"),
selectInput(
inputId = "y_var",
label = h3("Type"),
choices = input_option
),
selectInput(
inputId = "color",
label = h3("Color"),
choices = list("Red" = "red", "Blue" = "blue", "Green" = "green")
)
),
mainPanel(
h2("Climate Change Visualization"),
plotlyOutput(outputId = "scatter"),
p("Our analysis follows climate change in the United States
specifically, but because one single variable cannot determine
the overall climatic change in the USA, we kept each variable
as an option that can be observed. For the USA, we can see
that the CO2 consumed per capita increases nearly exponentially
while the absolute growth of CO2 emissions shows little to
no correlation over time.")
)
)
)
# Get a vector of column names select inputs
input_option <- colnames(co2_data)
#`y_input` that stores a `selectInput()` for your variable to appear on the y
#axis of your chart.
y_input <- selectInput(
"y_var",
label = "Y Variable",
choices = input_options
)
# variable `color_input` as a `selectInput()` that allows users to
# select a color from a list of choices
color_input <- selectInput(
"color",
label = "Color",
choices = list("Red" = "red", "Blue" = "blue", "Green" = "green")
)
# UI page
ui <- navbarPage(
"Climate Change",
intro_page,
visual_page
)
runApp()
runApp()
y_input <- selectInput(
"y_var",
label = "Y Variable",
choices = input_option
)
# Layout for visual page tab that has Y variable and color options
visual_page <- tabPanel(
"Visualization Page",
sidebarLayout(
sidebarPanel(
p("Options"),
selectInput(
inputId = "y_var",
label = h3("Type"),
choices = input_option
),
selectInput(
inputId = "color",
label = h3("Color"),
choices = list("Red" = "red", "Blue" = "blue", "Green" = "green")
)
),
mainPanel(
h2("Climate Change Visualization"),
plotlyOutput(outputId = "scatter"),
p("Our analysis follows climate change in the United States
specifically, but because one single variable cannot determine
the overall climatic change in the USA, we kept each variable
as an option that can be observed. For the USA, we can see
that the CO2 consumed per capita increases nearly exponentially
while the absolute growth of CO2 emissions shows little to
no correlation over time.")
)
)
runApp()
runApp()
y_input <- selectInput(
"y_var",
label = "Y Variable",
choices = input_option
)
input_option <- colnames(co2_data)
runApp()
setwd("~/Desktop/info_201/a4-cynthiachung/climate-test")
setwd("~/Desktop/info_201/a4-cynthiachung/climate-test")
setwd("~/Desktop/info_201/a4-cynthiachung/climate-test")
runApp()
View(y_input)
View(co2_data)
runApp()
input_option <- colnames(co2_data)
runApp()
runApp()
y_input <- selectInput(
"y_var",
label = "Y Variable",
choices = input_option
)
runApp()
(co2_data)
input_option <- colnames(co2_data)
runApp()
library(shiny)
library(ggplot2)
library(plotly)
library(RColorBrewer)
co2_data <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
# Get a vector of column names select inputs
input_option <- colnames(co2_data)
#introduction page
intro_page <- tabPanel(
"Introduction",
mainPanel(
h2("Topic Introduction"),
p("This analysis covers data regarding climate change. Specifically,
this analysis will focus on average CO2 emissions per capita (measured in
tonnes) and CO2 growth percentages. 5 statistics were calculated
to summarize these variables. The country with the max average CO2 emissions
per capita across all years was Qatar. The max average CO2 emission per
capita value was 403. The median average per capita CO2 emission in the US
was 2.53. The average absolute growth of CO2 emissions in the US was
4.6 and the max average absolute growth of CO2 emissions in the US
was 600.")
)
)
# Layout for visual page tab that has Y variable and color options
visual_page <- tabPanel(
"Visualization Page",
sidebarLayout(
sidebarPanel(
p("Options"),
selectInput(
inputId = "y_var",
label = h3("Type"),
choices = input_option
),
selectInput(
inputId = "color",
label = h3("Color"),
choices = list("Red" = "red", "Blue" = "blue", "Green" = "green")
)
),
mainPanel(
h2("Climate Change Visualization"),
plotlyOutput(outputId = "scatter"),
p("Our analysis follows climate change in the United States
specifically, but because one single variable cannot determine
the overall climatic change in the USA, we kept each variable
as an option that can be observed. For the USA, we can see
that the CO2 consumed per capita increases nearly exponentially
while the absolute growth of CO2 emissions shows little to
no correlation over time.")
)
)
)
#`y_input` that stores a `selectInput()` for your variable to appear on the y
#axis of your chart.
y_input <- selectInput(
"y_var",
label = "Y Variable",
choices = input_option
)
# variable `color_input` as a `selectInput()` that allows users to
# select a color from a list of choices
color_input <- selectInput(
"color",
label = "Color",
choices = list("Red" = "red", "Blue" = "blue", "Green" = "green")
)
# UI page
ui <- navbarPage(
"Climate Change",
intro_page,
visual_page
)
co2_data2 <- co2_data %>%
rename(iso_code = Country_Abbreviation)
co2_data2 <- co2_data %>%
rename(Country_Abbreviation = iso_code)
# Get a vector of column names select inputs
input_option <- colnames(co2_data2)
runApp()
runApp()
runApp()
# Get a vector of column names select inputs
input_option <- colnames(co2_data)
input_option <- colnames(co2_data)
runApp()
names(co2_data)[1] <- "Country_Abbreviation"
names(co2_data)[4] <- "CO2_Production"
names(co2_data)[5] <- "Percent_Change_In_CO2"
names(co2_data)[6] <- "Annual_Change_In_CO2"
names(co2_data)[7] <- "Annual_CO2_Consumption"
names(co2_data)[8] <- "Net_CO2_Emission_Embedded_In_Trade"
names(co2_data)[9] <- "Net_CO2_Emission_Embedded_In_Trade_Percentage"
names(co2_data)[10] <- "Average_CO2_Per_Capita"
names(co2_data)[11] <- "Per_Capita_CO2_Consumption"
names(co2_data)[12] <- "Percentage_Of_GLobal_CO2_Emission"
names(co2_data)[13] <- "Cumulative_CO2_Emission"
names(co2_data)[14] <- "Percentage_Of_GLobal_Cumulative_CO2_Emission"
names(co2_data)[15] <- "CO2_Emission_Per_Unit_Of_GDP"
names(co2_data)[16] <- "Consumption_Based_CO2_Emission_Per_Unit_Of_GDP"
names(co2_data)[17] <- "CO2_Comsumption_Per_Unit_Of_Energry"
names(co2_data)[18] <- "CO2_Emission_From_Cement_Production"
names(co2_data)[19] <- "CO2_Emission_From_Coal_Production"
names(co2_data)[20] <- "CO2_Emission_From_Gas_Flare"
names(co2_data)[21] <- "CO2_Emission_From_Gas_Production"
names(co2_data)[22] <- "CO2_Emission_From_Oil_Production"
names(co2_data)[23] <- "Per_Captia_CO2_Emission_From_Cement_Production"
names(co2_data)[24] <- "Per_Captia_CO2_Emission_From_Coal_Production"
names(co2_data)[25] <- "Per_Captia_CO2_Emission_From_Gas_Flare"
names(co2_data)[26] <- "Per_Captia_CO2_Emission_From_Gas_Production"
names(co2_data)[27] <- "Per_Captia_CO2_Emission_From_Oil_Production"
names(co2_data)[28] <- "Annual_Greenhouse_Gas_Emission"
names(co2_data)[29] <- "Greenhouse_Gas_Emission_Per_Capita"
names(co2_data)[30] <- "Annual_Methane_Emissions"
names(co2_data)[31] <- "Methane_Emissions_Per_Capita"
names(co2_data)[32] <- "Annual_Nitrous_Oxide_Emissions"
names(co2_data)[33] <- "Per_Capita_Nitrous_Oxide_Emissions"
names(co2_data)[34] <- "Primary_Energy_Consumption"
names(co2_data)[35] <- "Primary_Energy_Consumption_Per_Capita"
names(co2_data)[36] <- "Primary_Energy_Consumption_Per_Unit_Of_GDP"
names(co2_data)[38] <- "Total_Real_Gross_GDP"
input_option <- colnames(co2_data)
co2_data <- co2_data %>%
rename(Country_Abbreviation = iso_code)
co2_data <- co2_data %>%
rename(iso_code = Country_Abbreviation)
input_option <- colnames(co2_data)
co2_data <- co2_data %>%
rename(Country_Abbreviation = iso_code)
runApp()
input_option <- colnames(co2_data)
input_option <- colnames(co2_data)
View(co2_data)
View(co2_data)
runApp()
y_input <- selectInput(
"y_var",
label = "Y Variable",
choices = input_option
)
runApp()
View(input_option)
names(co2_data)[1] <- "Country_Abbreviation"
names(co2_data)[4] <- "CO2_Production"
names(co2_data)[5] <- "Percent_Change_In_CO2"
names(co2_data)[6] <- "Annual_Change_In_CO2"
names(co2_data)[7] <- "Annual_CO2_Consumption"
names(co2_data)[8] <- "Net_CO2_Emission_Embedded_In_Trade"
names(co2_data)[9] <- "Net_CO2_Emission_Embedded_In_Trade_Percentage"
names(co2_data)[10] <- "Average_CO2_Per_Capita"
names(co2_data)[11] <- "Per_Capita_CO2_Consumption"
names(co2_data)[12] <- "Percentage_Of_GLobal_CO2_Emission"
names(co2_data)[13] <- "Cumulative_CO2_Emission"
names(co2_data)[14] <- "Percentage_Of_GLobal_Cumulative_CO2_Emission"
names(co2_data)[15] <- "CO2_Emission_Per_Unit_Of_GDP"
names(co2_data)[16] <- "Consumption_Based_CO2_Emission_Per_Unit_Of_GDP"
names(co2_data)[17] <- "CO2_Comsumption_Per_Unit_Of_Energry"
names(co2_data)[18] <- "CO2_Emission_From_Cement_Production"
names(co2_data)[19] <- "CO2_Emission_From_Coal_Production"
names(co2_data)[20] <- "CO2_Emission_From_Gas_Flare"
names(co2_data)[21] <- "CO2_Emission_From_Gas_Production"
names(co2_data)[22] <- "CO2_Emission_From_Oil_Production"
names(co2_data)[23] <- "Per_Captia_CO2_Emission_From_Cement_Production"
names(co2_data)[24] <- "Per_Captia_CO2_Emission_From_Coal_Production"
names(co2_data)[25] <- "Per_Captia_CO2_Emission_From_Gas_Flare"
names(co2_data)[26] <- "Per_Captia_CO2_Emission_From_Gas_Production"
names(co2_data)[27] <- "Per_Captia_CO2_Emission_From_Oil_Production"
names(co2_data)[28] <- "Annual_Greenhouse_Gas_Emission"
names(co2_data)[29] <- "Greenhouse_Gas_Emission_Per_Capita"
names(co2_data)[30] <- "Annual_Methane_Emissions"
names(co2_data)[31] <- "Methane_Emissions_Per_Capita"
names(co2_data)[32] <- "Annual_Nitrous_Oxide_Emissions"
names(co2_data)[33] <- "Per_Capita_Nitrous_Oxide_Emissions"
names(co2_data)[34] <- "Primary_Energy_Consumption"
names(co2_data)[35] <- "Primary_Energy_Consumption_Per_Capita"
names(co2_data)[36] <- "Primary_Energy_Consumption_Per_Unit_Of_GDP"
names(co2_data)[38] <- "Total_Real_Gross_GDP"
input_option <- colnames(co2_data)
runApp()
# Layout for visual page tab that has Y variable and color options
visual_page <- tabPanel(
"Visualization Page",
sidebarLayout(
sidebarPanel(
p("Options"),
selectInput(
inputId = "y_var",
label = h3("Type"),
choices = input_option
),
selectInput(
inputId = "color",
label = h3("Color"),
choices = list("Red" = "red", "Blue" = "blue", "Green" = "green")
)
),
mainPanel(
h2("Climate Change Visualization"),
plotlyOutput(outputId = "scatter"),
p("Our analysis follows climate change in the United States
specifically, but because one single variable cannot determine
the overall climatic change in the USA, we kept each variable
as an option that can be observed. For the USA, we can see
that the CO2 consumed per capita increases nearly exponentially
while the absolute growth of CO2 emissions shows little to
no correlation over time.")
)
)
y_input <- selectInput(
"y_var",
label = "Y Variable",
choices = input_option
)
# UI page
ui <- navbarPage(
"Climate Change",
intro_page,
visual_page
)
runApp()
y_options <- colnames(co2_data)
runApp()
names(co2_data)[1] <- "Country_Abbreviation"
names(co2_data)[4] <- "CO2_Production"
names(co2_data)[5] <- "Percent_Change_In_CO2"
names(co2_data)[6] <- "Annual_Change_In_CO2"
names(co2_data)[7] <- "Annual_CO2_Consumption"
names(co2_data)[8] <- "Net_CO2_Emission_Embedded_In_Trade"
names(co2_data)[9] <- "Net_CO2_Emission_Embedded_In_Trade_Percentage"
names(co2_data)[10] <- "Average_CO2_Per_Capita"
names(co2_data)[11] <- "Per_Capita_CO2_Consumption"
names(co2_data)[12] <- "Percentage_Of_GLobal_CO2_Emission"
names(co2_data)[13] <- "Cumulative_CO2_Emission"
names(co2_data)[14] <- "Percentage_Of_GLobal_Cumulative_CO2_Emission"
names(co2_data)[15] <- "CO2_Emission_Per_Unit_Of_GDP"
names(co2_data)[16] <- "Consumption_Based_CO2_Emission_Per_Unit_Of_GDP"
names(co2_data)[17] <- "CO2_Comsumption_Per_Unit_Of_Energry"
names(co2_data)[18] <- "CO2_Emission_From_Cement_Production"
names(co2_data)[19] <- "CO2_Emission_From_Coal_Production"
names(co2_data)[20] <- "CO2_Emission_From_Gas_Flare"
names(co2_data)[21] <- "CO2_Emission_From_Gas_Production"
names(co2_data)[22] <- "CO2_Emission_From_Oil_Production"
names(co2_data)[23] <- "Per_Captia_CO2_Emission_From_Cement_Production"
names(co2_data)[24] <- "Per_Captia_CO2_Emission_From_Coal_Production"
names(co2_data)[25] <- "Per_Captia_CO2_Emission_From_Gas_Flare"
names(co2_data)[26] <- "Per_Captia_CO2_Emission_From_Gas_Production"
names(co2_data)[27] <- "Per_Captia_CO2_Emission_From_Oil_Production"
names(co2_data)[28] <- "Annual_Greenhouse_Gas_Emission"
names(co2_data)[29] <- "Greenhouse_Gas_Emission_Per_Capita"
names(co2_data)[30] <- "Annual_Methane_Emissions"
names(co2_data)[31] <- "Methane_Emissions_Per_Capita"
names(co2_data)[32] <- "Annual_Nitrous_Oxide_Emissions"
names(co2_data)[33] <- "Per_Capita_Nitrous_Oxide_Emissions"
names(co2_data)[34] <- "Primary_Energy_Consumption"
names(co2_data)[35] <- "Primary_Energy_Consumption_Per_Capita"
names(co2_data)[36] <- "Primary_Energy_Consumption_Per_Unit_Of_GDP"
names(co2_data)[38] <- "Total_Real_Gross_GDP"
runApp()
runApp()
runApp()
runApp()
shiny::runApp('~/Desktop/info_201/Group-Project/scripts/app.R/final_project')
runApp('~/Desktop/info_201/Group-Project/scripts/app.R/final_project')
y_options <- select(netflix_stock, -"Date")
View(y_options)
y_options <- select(netflix_stock, -"Date")
# Get a vector of column names select inputs
y_options <- colnames(netflix_stock)
netflix_stock <- read.csv("NFLX.csv")
setwd("~/Desktop/info_201/Group-Project/scripts/app.R/final_project")
setwd("~/Desktop/info_201/Group-Project/scripts/app.R/final_project")
setwd("~/Desktop/info_201/Group-Project/scripts/app.R/final_project")
netflix_stock <- read.csv("NFLX.csv")
y_options <- colnames(netflix_stock)
View(y_options)
y_options <- colnames(netflix_stock)[2:7]
View(y_options)
runApp()
