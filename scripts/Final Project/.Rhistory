group = group, fill = black_prop
)) +
scale_fill_viridis_c() +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ca_plot
ca_plot <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 5)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ca_plot
prison_adm_rate_data <- county_data %>%
select(black_jail_pop_rate, white_jail_pop_rate, total_jail_pop_rate,
state, fips,
year, county_name) %>%
mutate(black_white_ratio = black_jail_pop_rate / white_jail_pop_rate)
county_shapes <- map_data("county") %>%
unite(polyname, region, subregion, sep = ",") %>%
left_join(county.fips, by = "polyname")
map_data <- county_shapes %>%
left_join(prison_adm_rate_data, by = "fips") %>%
filter(year == 2018, state == "CA")
blank_theme <- theme_bw() +
theme(
axis.line = element_blank(), # remove axis lines
axis.text = element_blank(), # remove axis labels
axis.ticks = element_blank(), # remove axis ticks
axis.title = element_blank(), # remove axis titles
plot.background = element_blank(), # remove gray background
panel.grid.major = element_blank(), # remove major grid lines
panel.grid.minor = element_blank(), # remove minor grid lines
panel.border = element_blank() # remove border around plot
)
ca_plot <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 5)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ca_plot
ca_plot <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c("0", "5")) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ca_plot
ca_plot <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 10)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ca_plot
prison_adm_rate_data <- county_data %>%
select(black_jail_pop_rate, white_jail_pop_rate, total_jail_pop_rate,
state, fips, region
year, county_name) %>%
mutate(black_white_ratio = black_jail_pop_rate / white_jail_pop_rate)
prison_adm_rate_data <- county_data %>%
select(black_jail_pop_rate, white_jail_pop_rate, total_jail_pop_rate,
state, fips, region
year, county_name) %>%
mutate(black_white_ratio = black_jail_pop_rate / white_jail_pop_rate)
prison_adm_rate_data <- county_data %>%
select(black_jail_pop_rate, white_jail_pop_rate, total_jail_pop_rate,
state, fips, region,
year, county_name) %>%
mutate(black_white_ratio = black_jail_pop_rate / white_jail_pop_rate)
ca_plot <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, >10)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ca_plot <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 10)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ca_plot
map_data <- county_shapes %>%
left_join(prison_adm_rate_data, by = "fips") %>%
filter(year == 2018, region  == "South")
ca_plot <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 10)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ca_plot
ca_plot <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c() +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ca_plot
ca_plot <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 30)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ca_plot
ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 25)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 20)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
map_data <- county_shapes %>%
left_join(prison_adm_rate_data, by = "fips") %>%
filter(year == 2018)
ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 20)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 15)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
map_data <- county_shapes %>%
left_join(prison_adm_rate_data, by = "fips") %>%
filter(year == 2017)
ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 15)) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 15), labels = c("0", "5", "10", "15+")) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
map_data <- county_shapes %>%
left_join(prison_adm_rate_data, by = "fips") %>%
filter(year == 2018)
ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 15), labels = c("0", "5", "10", "15+")) +
coord_map() +
labs(title = "Ratio between Black and White Jail Population Rates in
California, 2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 15), labels = c("0", "5", "10", "15+")) +
coord_map() +
labs(title = "Ratio between Black and White U.S. Jail Population Rates in
2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
us <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 15), labels = c("0", "5", "10", "15+")) +
coord_map() +
labs(title = "Ratio between Black and White U.S. Jail Population Rates in
2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
us <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio,
text = county_name
)) +
scale_fill_viridis_c(limits = c(0, 15), labels = c("0", "5", "10", "15+")) +
coord_map() +
labs(title = "Ratio between Black and White U.S. Jail Population Rates in
2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
us_map <- ggplotly(us, tooltip = "text")
us_map
us_map <- ggplotly(us, tooltip = "text") + coord_map()
us_map
us_map <- ggplotly(us, tooltip = "text") + ggplotly(coord_map())
us_map <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio,
text = county_name
)) +
scale_fill_viridis_c(limits = c(0, 15), labels = c("0", "5", "10", "15+")) +
coord_map() +
labs(title = "Ratio between Black and White U.S. Jail Population Rates in
2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
us_map <- ggplot(data = map_data) +
geom_polygon(mapping = aes(x = long, y = lat,
group = group, fill = black_white_ratio
)) +
scale_fill_viridis_c(limits = c(0, 15), labels = c("0", "5", "10", "15+")) +
coord_map() +
labs(title = "Ratio between Black and White U.S. Jail Population Rates in
2018", fill = "Black to White Jail Population Rate Ratio") +
blank_theme
us_map
us_map
us_map
us_map
??mapping
??ggplot
ls
ls()
rm(list = ls())
shiny::runApp('OneDrive/2020-2021/INFO201/a4-meganluu')
runApp('OneDrive/2020-2021/INFO201/a4-meganluu')
runApp('OneDrive/2020-2021/INFO201/a4-meganluu')
View(data)
y_variables <- data %>%
select(cumulative_co2, cement_co2)
View(y_variables)
runApp('OneDrive/2020-2021/INFO201/a4-meganluu')
runApp('OneDrive/2020-2021/INFO201/a4-meganluu')
runApp('OneDrive/2020-2021/INFO201/a4-meganluu')
??colnames()
shiny::runApp('OneDrive/2020-2021/INFO201/a4-meganluu')
y_variables <- colnames(data[,18:22])
runApp('OneDrive/2020-2021/INFO201/a4-meganluu')
??selectInput()
runApp('OneDrive/2020-2021/INFO201/a4-meganluu')
by_year <- netflix_titles %>%
mutate(type_media = if_else(type == "Movie", 1, 0)) %>%
group_by(release_year) %>%
summarise(
number_released_in_year = n(),
num_movies = sum(type_media),
num_tvshows = number_released_in_year - num_movies,
movie_tvshow_difference = num_movies - num_tvshows
) %>%
names(by_year) [1] <- "Release Year"
# group by year
library(tidyverse)
netflix_titles <- read.csv("https://raw.githubusercontent.com/estherrli/Group-Project/main/data/netflix_titles.csv")
by_year <- netflix_titles %>%
mutate(type_media = if_else(type == "Movie", 1, 0)) %>%
group_by(release_year) %>%
summarise(
number_released_in_year = n(),
num_movies = sum(type_media),
num_tvshows = number_released_in_year - num_movies,
movie_tvshow_difference = num_movies - num_tvshows
) %>%
names(by_year) [1] <- "Release Year"
names(by_year) [2] <- "Total Number of Netflix Entries In Year"
names(by_year) [3] <- "Number of Movies"
names(by_year) [4] <- "Number of TV Shows"
names(by_year) [5] <- "Difference Between Number of Movies and TV Shows"
library(tidyverse)
netflix_titles <- read.csv("https://raw.githubusercontent.com/estherrli/Group-Project/main/data/netflix_titles.csv")
by_year <- netflix_titles %>%
mutate(type_media = if_else(type == "Movie", 1, 0)) %>%
group_by(release_year) %>%
summarise(
number_released_in_year = n(),
num_movies = sum(type_media),
num_tvshows = number_released_in_year - num_movies,
movie_tvshow_difference = num_movies - num_tvshows
) %>%
names(by_year) [1] <- "Release Year"
names(by_year) [2] <- "Total Number of Netflix Entries In Year"
names(by_year) [3] <- "Number of Movies"
names(by_year) [4] <- "Number of TV Shows"
names(by_year) [5] <- "Difference Between Number of Movies and TV Shows"
by_year <- netflix_titles %>%
mutate(type_media = if_else(type == "Movie", 1, 0)) %>%
group_by(release_year) %>%
summarise(
number_released_in_year = n(),
num_movies = sum(type_media),
num_tvshows = number_released_in_year - num_movies,
movie_tvshow_difference = num_movies - num_tvshows
)
by_year <- netflix_titles %>%
mutate(type_media = if_else(type == "Movie", 1, 0)) %>%
group_by(release_year) %>%
summarise(
number_released_in_year = n(),
num_movies = sum(type_media),
num_tvshows = number_released_in_year - num_movies,
movie_tvshow_difference = num_movies - num_tvshows
) %>%
names(by_year) [1] <- "Release Year"
names(by_year) [2] <- "Total Number of Netflix Entries In Year"
names(by_year) [3] <- "Number of Movies"
names(by_year) [4] <- "Number of TV Shows"
names(by_year) [5] <- "Difference Between Number of Movies and TV Shows"
library(tidyverse)
library(tidyverse)
source("../Group-Project/scripts/aggregatetable.R")
by_year <- netflix_titles %>%
mutate(type_media = if_else(type == "Movie", 1, 0)) %>%
group_by(release_year) %>%
summarise(
number_released_in_year = n(),
num_movies = sum(type_media),
num_tvshows = number_released_in_year - num_movies,
movie_tvshow_difference = num_movies - num_tvshows
)
by_year <- netflix_titles %>%
mutate(type_media = if_else(type == "Movie", 1, 0)) %>%
group_by(release_year) %>%
summarise(
number_released_in_year = n(),
num_movies = sum(type_media),
num_tvshows = number_released_in_year - num_movies,
movie_tvshow_difference = num_movies - num_tvshows
) %>%
names(by_year) [1] <- "Release Year"
names(by_year) [2] <- "Total Number of Netflix Entries In Year"
names(by_year) [3] <- "Number of Movies"
names(by_year) [4] <- "Number of TV Shows"
names(by_year) [5] <- "Difference Between Number of Movies and TV Shows"
source("../Group-Project/scripts/aggregatetable.R")
source("../Group-Project/scripts/aggregatetable.R")
source("../Group-Project/scripts/aggregatetable.R")
library(shiny)
library(tidyverse)
library(ggplot2)
library(plotly)
library(stringr)
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
??as.character
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
??geom_col
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
??separate
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
??plotlyOutput
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
runApp('OneDrive/2020-2021/INFO201/Page1')
setwd("~/OneDrive/2020-2021/INFO201/Group-Project/scripts/app.R/final_project")
runApp()
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp()
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Page1')
runApp('~/OneDrive/2020-2021/INFO201/Group-Project/scripts/Tab2')
runApp('~/OneDrive/2020-2021/INFO201/Group-Project/scripts/Tab2')
runApp('~/OneDrive/2020-2021/INFO201/Group-Project/scripts/Tab2')
data_tab2 <- read.csv("https://raw.githubusercontent.com/estherrli/Group-Project/main/data/MoviesOnStreamingPlatforms_updated.csv")
runApp('~/OneDrive/2020-2021/INFO201/Group-Project/scripts/Tab2')
tab2_columns <- data_tab2 %>%
filter(Year == max(Year)) %>%
separate(Genres, c("Genre", "Genre2", "Genre3"), sep = ",") %>%
select(Age, Runtime, Genre, IMDb, Rotten.Tomatoes)
View(tab2_columns)
setwd("~/OneDrive/2020-2021/INFO201/Group-Project/scripts/Tab2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
??reorder()
runApp()
runApp()
runApp()
tab2_columns <- data_tab2 %>%
filter(Year == max(Year)) %>%
separate(Genres, c("Genre", "Genre2", "Genre3"), sep = ",") %>%
select(Age, Runtime, Genre, IMDb, Rotten.Tomatoes, Title)
View(tab2_columns)
View(tab2_columns)
runApp()
runApp()
runApp()
View(tab2_columns)
View(tab2_columns)
runApp()
runApp()
runApp()
runApp()
runApp()
View(tab2_columns)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
filtered_data <- netflix_titles %>%
filter(type == "Movie") %>%
filter(genre == input$chart1_genre) %>%
group_by(year_added, na.rm = T) %>%
summarize(count = n(), na.rm = T)
