# Cynthia: Pie chart Movies vs TV Shows
read.csv("netflix_titles.csv")
pwd
cd
# Cynthia: Pie chart Movies vs TV Shows
netflix <- read.csv("netflix_titles.csv")
# Cynthia: Pie chart Movies vs TV Shows
netflix <- read.csv("https://raw.githubusercontent.com/estherrli/Group-Project/main/data/netflix_titles.csv")
View(netflix)
# Code for chart
install.packages("ggplot2")
library(ggplot2)
pie(netflix$type)
prop_movie <- length(str_detect(netflix$type, "Movie"))
library(dplyr)
prop_movie <- length(str_detect(netflix$type, "Movie"))
?str_detect
library(tidyverse)
prop_movie <- length(str_detect(netflix$type, "Movie"))
num_movie <- length(str_detect(netflix$type, "Movie"))
prop_movie <- num_movie / length(neflix$type)
prop_movie <- num_movie / length(neflix)
prop_movie <- num_movie / length(type)
num_movie <- length(str_subset(netflix$type, "Movie"))
View(netflix)
prop_movie <- num_movie / length(type)
prop_movie <- num_movie / length(netflix$type)
prop_shows <- num_shows / length(netflix$type)
# Proportion of Netflix submissions that are TV shows
num_shows <- length(str_subset(netflix$type, "TV Show"))
prop_shows <- num_shows / length(netflix$type)
ggplot(netflix, aes(x=factor(cyl)))+
geom_bar(stat="bin", width=0.7, fill="steelblue")+
theme_minimal()
ggplot(netflix, aes(x=factor(type)))+
geom_bar(stat="bin", width=0.7, fill="steelblue")+
theme_minimal()
ggplot(netflix, aes(x=factor(type)))+
geom_bar(stat="count", width=0.7, fill="steelblue")+
theme_minimal()
p<-ggplot(netflix, aes(x=dose, y=len, fill=dose)) +
geom_bar(stat="count")+theme_minimal()
p
p<-ggplot(netflix, aes(x=type, y=count, fill=type)) +
geom_bar(stat="count")+theme_minimal()
p
ggplot(netflix, aes(x=factor(type)))+
geom_bar(stat="count", width=0.7, fill="steelblue")+
theme_minimal()
ggplot(data=netflix, aes(x=factor(type))) +
geom_bar(stat="count", fill="steelblue")+
geom_text(aes(label=len), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(data=netflix, aes(x=factor(type))) +
geom_bar(stat="count", fill="steelblue")+
geom_text(aes(label=count), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(netflix, aes(x=factor(type))) +
geom_bar(stat="count", fill="steelblue")+
geom_text(aes(label=count), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(netflix, aes(x=factor(type))) +
geom_bar(stat="count", fill="steelblue")+
geom_text(aes(label=type), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(data=netflix, aes(x=type, y=count)) +
geom_bar(stat="count", fill="steelblue")+
geom_text(aes(label=count()), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(netflix, aes(x=factor(type)))+
geom_bar(stat="count", width=0.7, fill="steelblue")+
theme_minimal()
ggplot(netflix, aes(x=factor(type)))+
geom_bar(stat="count", width=0.5, fill="steelblue")+
theme_minimal()
p<-ggplot(netflix, aes(x=type, y=count, color=type)) +
geom_bar(stat="identity", fill="white")
p
pie <- ggplot(netflix, aes(x="", y=value, fill=Group)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
View(pie)
gplot(netflix, aes(x=factor(type)))+
geom_bar(stat="count", width=0.5, fill="steelblue")+
geom_text(aes(label=count), position=position_dodge(width=0.9), vjust=-0.25)
theme_minimal()
ggplot(netflix, aes(x=factor(type)))+
geom_bar(stat="count", width=0.5, fill="steelblue")+
geom_text(aes(label=count), position=position_dodge(width=0.9), vjust=-0.25)
theme_minimal()
ggplot(netflix, aes(x=factor(type)))+
geom_bar(stat="count", width=0.5, fill="steelblue")+
theme_minimal()
ggplot(netflix, aes(x = factor(type))) +
geom_bar() +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar() +
geom_text(aes(label = ..count..), stat = "count", vjust = 0.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar() +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(stat="count", width=0.5, fill="steelblue") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(stat="count", width=0.5, fill="skyblue2") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(stat="count", width=0.5, fill="skyblue2") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white") +
scale_fill_manual("Legend", values = c("Movie" = "lightblue1", "TV Show" = "lavendar"))
ggplot(netflix, aes(x = factor(type))) +
geom_bar(stat="count", width=0.5) +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white") +
scale_fill_manual("Legend", values = c("Movie" = "lightblue1", "TV Show" = "lavendar"))
ggplot(netflix, aes(x = factor(type))) +
geom_bar(stat="count", width=0.5) +
scale_fill_manual("Legend", values = c("Movie" = "lightblue1", "TV Show" = "lavendar")) +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(stat="count", width=0.5, fill = type) +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(cyl))) +
geom_bar() +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar() +
geom_text(aes(label = ..count..), stat = "count", vjust = 0.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar() +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(width = 0.5) +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values=c("grey50", "red")) +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(width = 0.5) +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(width = 0.5, fill = "skyblue1") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
install.package("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
# get a vector of 6 different colors from Set1 of brewer.pal (it has 9 colors max)
myColors <- brewer.pal(6, "Set1")
# assign a different color to each spray factor
# NB: use as.factor if the vector to be mapped is not already a factor
names(myColors) <- netflix$type
# get a vector of 6 different colors from Set1 of brewer.pal (it has 9 colors max)
myColors <- brewer.pal(2, "Set1")
# get a vector of 6 different colors from Set1 of brewer.pal (it has 9 colors max)
myColors <- brewer.pal(1, "Set1")
# get a vector of 6 different colors from Set1 of brewer.pal (it has 9 colors max)
myColors <- brewer.pal(2, "Set1")
# assign a different color to each spray factor
# NB: use as.factor if the vector to be mapped is not already a factor
names(myColors) <- netflix$type
ggplot(netflix, aes(x = factor(type))) +
geom_bar(width = 0.5) +
scale_colour_manual(values= "skyblue1", "lavendar") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(width = 0.5, fill = "skyblue1") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
netflix %>%
mutate(color = ifelse(type == 'Movie', T, F)) %>%
ggplot(aes(x = type)) +
geom_bar(aes(fill = color))
netflix %>%
mutate(color = ifelse(type == 'Movie', T, F)) %>%
ggplot(aes(x = type)) +
geom_bar(aes(fill = color))
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(width = 0.5, fill = type) +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(width = 0.5, fill = netflix$type) +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(width = 0.5, fill = "skyblue1") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
ggplot(netflix, aes(x = factor(type))) +
geom_bar(width = 0.5, fill = "skyblue1") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
netflix_titles <- read.csv("https://raw.githubusercontent.com/estherrli/Group-Project/main/data/netflix_titles.csv")
# Code for chart
install.packages("ggplot2")
install.packages("RColorBrewer")
library(ggplot2)
library(RColorBrewer)
ggplot(netflix_titles, aes(x = factor(type))) +
geom_bar(width = 0.5, fill = "skyblue1") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
install.packages("ggplot2")
ggplot(netflix_titles, aes(x = factor(type))) +
geom_bar(width = 0.5, fill = "skyblue1") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour
= "white") +
labs(x = "Netflix Entry Type", y = "Count", title = "Number of Netflix
Entries")
ggplot(netflix_titles, aes(x = factor(type))) +
geom_bar(width = 0.5, fill = "skyblue1") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour
= "white") +
labs(x = "Netflix Entry Type", y = "Count", title = "Number of Netflix Entries")
by_year <- netflix_titles %>%
mutate(type_media = if_else(type == "Movie", 1, 0)) %>%
group_by(release_year) %>%
summarise(
number_released_in_year = n(),
num_movies = sum(type_media),
num_tvshows = number_released_in_year - num_movies,
movie_tvshow_difference = num_movies - num_tvshows
)
library(tidyverse)
by_year <- netflix_titles %>%
mutate(type_media = if_else(type == "Movie", 1, 0)) %>%
group_by(release_year) %>%
summarise(
number_released_in_year = n(),
num_movies = sum(type_media),
num_tvshows = number_released_in_year - num_movies,
movie_tvshow_difference = num_movies - num_tvshows
)
View(by_year)
names(netflix_titles) [1] <- "Release Year"
names(by_year) [1] <- "Release Year
View(by_year)
names(by_year) [1] <- "Release Year"
names(by_year) [1] <- "Release Year"
names(by_year) [1] <- "Release Year" %>%
names(by_year) [2] <- "Total Number of Netflix Entries In Year"
names(by_year) [1] <- "Release Year"
names(by_year) [2] <- "Total Number of Netflix Entries In Year"
names(by_year) [1] <- "Release Year"
names(by_year) [2] <- "Total Number of Netflix Entries In Year"
names(by_year) [3] <- "Number of Movies"
names(by_year) [4] <- "Number of TV Shows"
names(by_year) [1] <- "Difference Between Number of Movies and TV Shows"
names(by_year) [1] <- "Release Year"
names(by_year) [2] <- "Total Number of Netflix Entries In Year"
names(by_year) [3] <- "Number of Movies"
names(by_year) [4] <- "Number of TV Shows"
names(by_year) [5] <- "Difference Between Number of Movies and TV Shows"
